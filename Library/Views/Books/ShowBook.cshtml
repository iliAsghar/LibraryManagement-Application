@{
    ViewData["Title"] = "جزئیات کتاب";
}
<style>
    .book-details {
        font-family: "Vazir", sans-serif;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        margin: 2rem auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 2rem;
        direction: rtl;
        max-width: 1200px;
    }

    .book-info {
        width: 50%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    .book-details h1 {
        font-family: "Lalezar", sans-serif;
        font-size: 2.5rem;
        color: #DC5F00;
        text-align: center;
        margin-bottom: 1rem;
    }

    .book-info h2 {
        font-family: "Lalezar", sans-serif;
        font-size: 2rem;
        color: #333;
        margin-bottom: 1rem;
    }

    .book-info p {
        font-size: 1rem;
        color: #555;
        margin: 0.5rem 0;
    }

        .book-info p strong {
            color: #333;
        }

    .book-cover {
        display: flex;
        justify-content: center;
        margin-top: 1rem;
    }

        .book-cover img {
            max-width: 200px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

    .book-actions {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        width: 50%;
        text-align: center;
    }

    .btn-thing {
        font-family: "Vazir", sans-serif;
        background-color: #DC5F00;
        color: white;
        padding: 0.8rem 2rem;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        text-align: center;
        font-size: 1rem;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

        .btn:hover {
            background-color: #b94b00;
        }

    .quantity-input {
        padding: 0.6rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 1rem;
        max-width: 80px;
        text-align: center;
    }

    .disabled {
        cursor: not-allowed;
        background-color: #373A40;
        color: #fff;
        opacity: 0.6;
        pointer-events: none;
    }

    .quantity-input {
        
        padding: 0.8rem;
        text-align: center;
        font-size: 1.2rem;
        border: 2px solid #ddd;
        border-radius: 25px;
        background-color: #f9f9f9;
        color: #333;
        outline: none;
        transition: all 0.3s ease;
        box-sizing: border-box;
    }

        .quantity-input::placeholder {
            color: #999;
        }

        .quantity-input:focus {
            border-color: #DC5F00;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(220, 95, 0, 0.3);
        }

        .quantity-input:hover {
            border-color: #DC5F00;
        }

        .quantity-input:disabled {
            background-color: #e0e0e0;
            border-color: #ccc;
            cursor: not-allowed;
        }

        .quantity-input::-webkit-outer-spin-button,
        .quantity-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }


        .book-actions form {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            align-items: center;
            justify-content: center;
            width: 100%;
        }

    
</style>

<div class="book-details">
    @if (!string.IsNullOrEmpty(Model.CoverPath))
    {
        <div class="book-cover">
            <img src="@Url.Content(Model.CoverPath)" alt="@Model.Title" />
        </div>
    }
    else
    {
        <p><em>تصویر کاور موجود نیست.</em></p>
    }
    <div class="book-info">
        <h1>جزئیات کتاب</h1>

        <h2>@Model.Title</h2>

        <p style="cursor: pointer;" onclick="window.location='@Url.Action("Search", "Books", new { query = Model.Author })'"><strong>نویسنده:</strong> @Model.Author </p>
        <p><strong>ژانر:</strong> @Model.Genre</p>

        <p><strong>توضیحات:</strong> @Model.Description</p>

        <p><strong>تعداد موجودی:</strong> @Model.TotalQuantity</p>

        <a href="/Books" class="btn">بازگشت</a>
    </div>
    

    <div class="book-actions">
        <form method="post" action="/transactions/AddBookToTransaction">
            <input type="hidden" name="bookId" value="@Model.Id" />
            <input type="number" name="quantity" class="quantity-input" value="0" min="0" max="2" id="quantity-input" />

            <script>
                document.getElementById('quantity-input').addEventListener('input', function () {
                    const input = this;
                    const min = parseInt(input.min, 10);
                    const max = parseInt(input.max, 10);
                    const value = parseInt(input.value, 10);

                    if (value > max) {
                        input.value = max;
                    } else if (value < min) {
                        input.value = min;
                    }
                });
            </script>





            @if (Model.TotalQuantity == 0)
            {
                @if (ViewBag.UserRole == "User")
                {
                    <button type="submit" class="btn-thing btn disabled">اضافه کردن</button>
                }
            }
            @if (Model.TotalQuantity != 0)
            {
                @if (ViewBag.UserRole == "User")
                {
                    <button type="submit" class="btn-thing btn">اضافه کردن</button>
                }
            }

            @if (ViewBag.UserRole == "BookKeeper")
            {
                <button type="submit" class="btn-thing btn">تغییر تعداد موجودی</button>
            }
        </form>
    </div>
</div>
